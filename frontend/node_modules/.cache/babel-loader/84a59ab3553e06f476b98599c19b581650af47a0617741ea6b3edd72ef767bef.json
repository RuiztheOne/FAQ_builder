{"ast":null,"code":"import axios from 'axios';\nimport { mockCategories, mockFaqs, delay, mockApiResponse } from './mockData';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst USE_MOCK_DATA = process.env.REACT_APP_USE_MOCK === 'true';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 5000 // 5 segundos de timeout\n});\n\n// Interceptor para tratamento de erros\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\n\n// Função para verificar se deve usar dados mock\nconst shouldUseMock = error => {\n  var _error$message, _error$response;\n  return USE_MOCK_DATA || (error === null || error === void 0 ? void 0 : error.code) === 'ECONNREFUSED' || (error === null || error === void 0 ? void 0 : error.code) === 'ERR_NETWORK' || (error === null || error === void 0 ? void 0 : (_error$message = error.message) === null || _error$message === void 0 ? void 0 : _error$message.includes('Network Error')) || (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) >= 500;\n};\n\n// Wrapper para chamadas da API com fallback para mock\nconst apiCall = async (apiFunction, mockFunction) => {\n  if (USE_MOCK_DATA) {\n    console.log('Using mock data (forced by environment)');\n    return mockFunction();\n  }\n  try {\n    return await apiFunction();\n  } catch (error) {\n    if (shouldUseMock(error)) {\n      console.log('API unavailable, using mock data:', error.message);\n      return mockFunction();\n    }\n    throw error;\n  }\n};\n\n// Serviços para Categorias\nexport const categoryService = {\n  getAll: () => api.get('/categories'),\n  getActive: () => api.get('/categories/active'),\n  getActiveWithCount: () => api.get('/categories/active/with-count'),\n  getById: id => api.get(`/categories/${id}`),\n  create: category => api.post('/categories', category),\n  update: (id, category) => api.put(`/categories/${id}`, category),\n  delete: id => api.delete(`/categories/${id}`),\n  deactivate: id => api.patch(`/categories/${id}/deactivate`),\n  reorder: categoryIds => api.put('/categories/reorder', categoryIds)\n};\n\n// Serviços para FAQs\nexport const faqService = {\n  getAll: () => api.get('/faqs'),\n  getActive: () => api.get('/faqs/active'),\n  getPaginated: (page = 0, size = 10) => api.get(`/faqs/paginated?page=${page}&size=${size}`),\n  getByCategory: categoryId => api.get(`/faqs/category/${categoryId}`),\n  getByCategoryPaginated: (categoryId, page = 0, size = 10) => api.get(`/faqs/category/${categoryId}/paginated?page=${page}&size=${size}`),\n  getById: id => api.get(`/faqs/${id}`),\n  search: query => api.get(`/faqs/search?q=${encodeURIComponent(query)}`),\n  searchByCategory: (categoryId, query) => api.get(`/faqs/search/category/${categoryId}?q=${encodeURIComponent(query)}`),\n  getByTag: tag => api.get(`/faqs/tag/${tag}`),\n  getByPriority: priority => api.get(`/faqs/priority/${priority}`),\n  getMostViewed: (limit = 10) => api.get(`/faqs/most-viewed?limit=${limit}`),\n  getMostHelpful: (limit = 10) => api.get(`/faqs/most-helpful?limit=${limit}`),\n  create: faq => api.post('/faqs', faq),\n  update: (id, faq) => api.put(`/faqs/${id}`, faq),\n  delete: id => api.delete(`/faqs/${id}`),\n  deactivate: id => api.patch(`/faqs/${id}/deactivate`),\n  incrementView: id => api.patch(`/faqs/${id}/view`),\n  markHelpful: id => api.patch(`/faqs/${id}/helpful`),\n  markNotHelpful: id => api.patch(`/faqs/${id}/not-helpful`),\n  reorder: faqIds => api.put('/faqs/reorder', faqIds)\n};\nexport default api;","map":{"version":3,"names":["axios","mockCategories","mockFaqs","delay","mockApiResponse","API_BASE_URL","process","env","REACT_APP_API_URL","USE_MOCK_DATA","REACT_APP_USE_MOCK","api","create","baseURL","headers","timeout","interceptors","response","use","error","console","Promise","reject","shouldUseMock","_error$message","_error$response","code","message","includes","status","apiCall","apiFunction","mockFunction","log","categoryService","getAll","get","getActive","getActiveWithCount","getById","id","category","post","update","put","delete","deactivate","patch","reorder","categoryIds","faqService","getPaginated","page","size","getByCategory","categoryId","getByCategoryPaginated","search","query","encodeURIComponent","searchByCategory","getByTag","tag","getByPriority","priority","getMostViewed","limit","getMostHelpful","faq","incrementView","markHelpful","markNotHelpful","faqIds"],"sources":["C:/Users/leand/ProjetoFAQ/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { mockCategories, mockFaqs, delay, mockApiResponse } from './mockData';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst USE_MOCK_DATA = process.env.REACT_APP_USE_MOCK === 'true';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 5000, // 5 segundos de timeout\n});\n\n// Interceptor para tratamento de erros\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Função para verificar se deve usar dados mock\nconst shouldUseMock = (error) => {\n  return USE_MOCK_DATA || \n         error?.code === 'ECONNREFUSED' || \n         error?.code === 'ERR_NETWORK' ||\n         error?.message?.includes('Network Error') ||\n         error?.response?.status >= 500;\n};\n\n// Wrapper para chamadas da API com fallback para mock\nconst apiCall = async (apiFunction, mockFunction) => {\n  if (USE_MOCK_DATA) {\n    console.log('Using mock data (forced by environment)');\n    return mockFunction();\n  }\n  \n  try {\n    return await apiFunction();\n  } catch (error) {\n    if (shouldUseMock(error)) {\n      console.log('API unavailable, using mock data:', error.message);\n      return mockFunction();\n    }\n    throw error;\n  }\n};\n\n// Serviços para Categorias\nexport const categoryService = {\n  getAll: () => api.get('/categories'),\n  getActive: () => api.get('/categories/active'),\n  getActiveWithCount: () => api.get('/categories/active/with-count'),\n  getById: (id) => api.get(`/categories/${id}`),\n  create: (category) => api.post('/categories', category),\n  update: (id, category) => api.put(`/categories/${id}`, category),\n  delete: (id) => api.delete(`/categories/${id}`),\n  deactivate: (id) => api.patch(`/categories/${id}/deactivate`),\n  reorder: (categoryIds) => api.put('/categories/reorder', categoryIds),\n};\n\n// Serviços para FAQs\nexport const faqService = {\n  getAll: () => api.get('/faqs'),\n  getActive: () => api.get('/faqs/active'),\n  getPaginated: (page = 0, size = 10) => api.get(`/faqs/paginated?page=${page}&size=${size}`),\n  getByCategory: (categoryId) => api.get(`/faqs/category/${categoryId}`),\n  getByCategoryPaginated: (categoryId, page = 0, size = 10) => \n    api.get(`/faqs/category/${categoryId}/paginated?page=${page}&size=${size}`),\n  getById: (id) => api.get(`/faqs/${id}`),\n  search: (query) => api.get(`/faqs/search?q=${encodeURIComponent(query)}`),\n  searchByCategory: (categoryId, query) => \n    api.get(`/faqs/search/category/${categoryId}?q=${encodeURIComponent(query)}`),\n  getByTag: (tag) => api.get(`/faqs/tag/${tag}`),\n  getByPriority: (priority) => api.get(`/faqs/priority/${priority}`),\n  getMostViewed: (limit = 10) => api.get(`/faqs/most-viewed?limit=${limit}`),\n  getMostHelpful: (limit = 10) => api.get(`/faqs/most-helpful?limit=${limit}`),\n  create: (faq) => api.post('/faqs', faq),\n  update: (id, faq) => api.put(`/faqs/${id}`, faq),\n  delete: (id) => api.delete(`/faqs/${id}`),\n  deactivate: (id) => api.patch(`/faqs/${id}/deactivate`),\n  incrementView: (id) => api.patch(`/faqs/${id}/view`),\n  markHelpful: (id) => api.patch(`/faqs/${id}/helpful`),\n  markNotHelpful: (id) => api.patch(`/faqs/${id}/not-helpful`),\n  reorder: (faqIds) => api.put('/faqs/reorder', faqIds),\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,eAAe,QAAQ,YAAY;AAE7E,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AACjF,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAG,CAACG,kBAAkB,KAAK,MAAM;AAE/D,MAAMC,GAAG,GAAGX,KAAK,CAACY,MAAM,CAAC;EACvBC,OAAO,EAAER,YAAY;EACrBS,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,IAAI,CAAE;AACjB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMI,aAAa,GAAIJ,KAAK,IAAK;EAAA,IAAAK,cAAA,EAAAC,eAAA;EAC/B,OAAOhB,aAAa,IACb,CAAAU,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,IAAI,MAAK,cAAc,IAC9B,CAAAP,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,IAAI,MAAK,aAAa,KAC7BP,KAAK,aAALA,KAAK,wBAAAK,cAAA,GAALL,KAAK,CAAEQ,OAAO,cAAAH,cAAA,uBAAdA,cAAA,CAAgBI,QAAQ,CAAC,eAAe,CAAC,KACzC,CAAAT,KAAK,aAALA,KAAK,wBAAAM,eAAA,GAALN,KAAK,CAAEF,QAAQ,cAAAQ,eAAA,uBAAfA,eAAA,CAAiBI,MAAM,KAAI,GAAG;AACvC,CAAC;;AAED;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAOC,WAAW,EAAEC,YAAY,KAAK;EACnD,IAAIvB,aAAa,EAAE;IACjBW,OAAO,CAACa,GAAG,CAAC,yCAAyC,CAAC;IACtD,OAAOD,YAAY,CAAC,CAAC;EACvB;EAEA,IAAI;IACF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACd,IAAII,aAAa,CAACJ,KAAK,CAAC,EAAE;MACxBC,OAAO,CAACa,GAAG,CAAC,mCAAmC,EAAEd,KAAK,CAACQ,OAAO,CAAC;MAC/D,OAAOK,YAAY,CAAC,CAAC;IACvB;IACA,MAAMb,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,eAAe,GAAG;EAC7BC,MAAM,EAAEA,CAAA,KAAMxB,GAAG,CAACyB,GAAG,CAAC,aAAa,CAAC;EACpCC,SAAS,EAAEA,CAAA,KAAM1B,GAAG,CAACyB,GAAG,CAAC,oBAAoB,CAAC;EAC9CE,kBAAkB,EAAEA,CAAA,KAAM3B,GAAG,CAACyB,GAAG,CAAC,+BAA+B,CAAC;EAClEG,OAAO,EAAGC,EAAE,IAAK7B,GAAG,CAACyB,GAAG,CAAC,eAAeI,EAAE,EAAE,CAAC;EAC7C5B,MAAM,EAAG6B,QAAQ,IAAK9B,GAAG,CAAC+B,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;EACvDE,MAAM,EAAEA,CAACH,EAAE,EAAEC,QAAQ,KAAK9B,GAAG,CAACiC,GAAG,CAAC,eAAeJ,EAAE,EAAE,EAAEC,QAAQ,CAAC;EAChEI,MAAM,EAAGL,EAAE,IAAK7B,GAAG,CAACkC,MAAM,CAAC,eAAeL,EAAE,EAAE,CAAC;EAC/CM,UAAU,EAAGN,EAAE,IAAK7B,GAAG,CAACoC,KAAK,CAAC,eAAeP,EAAE,aAAa,CAAC;EAC7DQ,OAAO,EAAGC,WAAW,IAAKtC,GAAG,CAACiC,GAAG,CAAC,qBAAqB,EAAEK,WAAW;AACtE,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxBf,MAAM,EAAEA,CAAA,KAAMxB,GAAG,CAACyB,GAAG,CAAC,OAAO,CAAC;EAC9BC,SAAS,EAAEA,CAAA,KAAM1B,GAAG,CAACyB,GAAG,CAAC,cAAc,CAAC;EACxCe,YAAY,EAAEA,CAACC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAAK1C,GAAG,CAACyB,GAAG,CAAC,wBAAwBgB,IAAI,SAASC,IAAI,EAAE,CAAC;EAC3FC,aAAa,EAAGC,UAAU,IAAK5C,GAAG,CAACyB,GAAG,CAAC,kBAAkBmB,UAAU,EAAE,CAAC;EACtEC,sBAAsB,EAAEA,CAACD,UAAU,EAAEH,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KACtD1C,GAAG,CAACyB,GAAG,CAAC,kBAAkBmB,UAAU,mBAAmBH,IAAI,SAASC,IAAI,EAAE,CAAC;EAC7Ed,OAAO,EAAGC,EAAE,IAAK7B,GAAG,CAACyB,GAAG,CAAC,SAASI,EAAE,EAAE,CAAC;EACvCiB,MAAM,EAAGC,KAAK,IAAK/C,GAAG,CAACyB,GAAG,CAAC,kBAAkBuB,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;EACzEE,gBAAgB,EAAEA,CAACL,UAAU,EAAEG,KAAK,KAClC/C,GAAG,CAACyB,GAAG,CAAC,yBAAyBmB,UAAU,MAAMI,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;EAC/EG,QAAQ,EAAGC,GAAG,IAAKnD,GAAG,CAACyB,GAAG,CAAC,aAAa0B,GAAG,EAAE,CAAC;EAC9CC,aAAa,EAAGC,QAAQ,IAAKrD,GAAG,CAACyB,GAAG,CAAC,kBAAkB4B,QAAQ,EAAE,CAAC;EAClEC,aAAa,EAAEA,CAACC,KAAK,GAAG,EAAE,KAAKvD,GAAG,CAACyB,GAAG,CAAC,2BAA2B8B,KAAK,EAAE,CAAC;EAC1EC,cAAc,EAAEA,CAACD,KAAK,GAAG,EAAE,KAAKvD,GAAG,CAACyB,GAAG,CAAC,4BAA4B8B,KAAK,EAAE,CAAC;EAC5EtD,MAAM,EAAGwD,GAAG,IAAKzD,GAAG,CAAC+B,IAAI,CAAC,OAAO,EAAE0B,GAAG,CAAC;EACvCzB,MAAM,EAAEA,CAACH,EAAE,EAAE4B,GAAG,KAAKzD,GAAG,CAACiC,GAAG,CAAC,SAASJ,EAAE,EAAE,EAAE4B,GAAG,CAAC;EAChDvB,MAAM,EAAGL,EAAE,IAAK7B,GAAG,CAACkC,MAAM,CAAC,SAASL,EAAE,EAAE,CAAC;EACzCM,UAAU,EAAGN,EAAE,IAAK7B,GAAG,CAACoC,KAAK,CAAC,SAASP,EAAE,aAAa,CAAC;EACvD6B,aAAa,EAAG7B,EAAE,IAAK7B,GAAG,CAACoC,KAAK,CAAC,SAASP,EAAE,OAAO,CAAC;EACpD8B,WAAW,EAAG9B,EAAE,IAAK7B,GAAG,CAACoC,KAAK,CAAC,SAASP,EAAE,UAAU,CAAC;EACrD+B,cAAc,EAAG/B,EAAE,IAAK7B,GAAG,CAACoC,KAAK,CAAC,SAASP,EAAE,cAAc,CAAC;EAC5DQ,OAAO,EAAGwB,MAAM,IAAK7D,GAAG,CAACiC,GAAG,CAAC,eAAe,EAAE4B,MAAM;AACtD,CAAC;AAED,eAAe7D,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}