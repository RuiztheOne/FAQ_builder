{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leand\\\\ProjetoFAQ\\\\frontend\\\\src\\\\components\\\\TestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper, Button, Grid, Card, CardContent, CardActions, Chip, Alert, CircularProgress, Divider } from '@mui/material';\nimport { PlayArrow as PlayIcon, Stop as StopIcon, Refresh as RefreshIcon, CheckCircle as CheckIcon, Error as ErrorIcon, Info as InfoIcon } from '@mui/icons-material';\nimport { categoryService, faqService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestPage() {\n  _s();\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTest, setCurrentTest] = useState('');\n  const tests = [{\n    name: 'Conexão com Backend',\n    description: 'Testa se o frontend consegue se conectar com o backend',\n    test: async () => {\n      const response = await fetch('http://localhost:8080/api/categories');\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      return 'Conexão estabelecida com sucesso';\n    }\n  }, {\n    name: 'Listar Categorias',\n    description: 'Testa o endpoint de listagem de categorias',\n    test: async () => {\n      const response = await categoryService.getAll();\n      return `${response.data.length} categorias encontradas`;\n    }\n  }, {\n    name: 'Listar FAQs',\n    description: 'Testa o endpoint de listagem de FAQs',\n    test: async () => {\n      const response = await faqService.getAll();\n      return `${response.data.length} FAQs encontradas`;\n    }\n  }, {\n    name: 'Criar Categoria de Teste',\n    description: 'Testa a criação de uma nova categoria',\n    test: async () => {\n      const testCategory = {\n        name: `Categoria Teste ${Date.now()}`,\n        description: 'Categoria criada durante o teste',\n        displayOrder: 999,\n        active: true\n      };\n      const response = await categoryService.create(testCategory);\n      return `Categoria criada com ID: ${response.data.id}`;\n    }\n  }, {\n    name: 'Buscar FAQs',\n    description: 'Testa a funcionalidade de busca',\n    test: async () => {\n      const response = await faqService.search('teste');\n      return `Busca retornou ${response.data.length} resultados`;\n    }\n  }, {\n    name: 'Categorias Ativas',\n    description: 'Testa o endpoint de categorias ativas',\n    test: async () => {\n      const response = await categoryService.getActive();\n      return `${response.data.length} categorias ativas`;\n    }\n  }];\n  const runAllTests = async () => {\n    setIsRunning(true);\n    setTestResults([]);\n    for (const test of tests) {\n      setCurrentTest(test.name);\n      try {\n        const startTime = Date.now();\n        const result = await test.test();\n        const duration = Date.now() - startTime;\n        setTestResults(prev => [...prev, {\n          name: test.name,\n          description: test.description,\n          status: 'success',\n          result,\n          duration\n        }]);\n      } catch (error) {\n        setTestResults(prev => [...prev, {\n          name: test.name,\n          description: test.description,\n          status: 'error',\n          result: error.message,\n          duration: 0\n        }]);\n      }\n\n      // Pequena pausa entre os testes\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n    setIsRunning(false);\n    setCurrentTest('');\n  };\n  const clearResults = () => {\n    setTestResults([]);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckIcon, {\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(InfoIcon, {\n          color: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'success':\n        return 'success';\n      case 'error':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const successCount = testResults.filter(r => r.status === 'success').length;\n  const errorCount = testResults.filter(r => r.status === 'error').length;\n  const totalTests = testResults.length;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"P\\xE1gina de Teste - Sistema FAQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      paragraph: true,\n      children: \"Esta p\\xE1gina permite testar a conectividade e funcionalidades b\\xE1sicas do sistema FAQ. Certifique-se de que o backend est\\xE1 rodando na porta 8080.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: isRunning ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 85\n          }, this),\n          onClick: runAllTests,\n          disabled: isRunning,\n          children: isRunning ? 'Executando Testes...' : 'Executar Todos os Testes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 24\n          }, this),\n          onClick: clearResults,\n          disabled: isRunning,\n          children: \"Limpar Resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), isRunning && currentTest && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 2\n        },\n        children: [\"Executando: \", currentTest]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), totalTests > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Chip, {\n          label: `Total: ${totalTests}`,\n          color: \"default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Sucessos: ${successCount}`,\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Erros: ${errorCount}`,\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), testResults.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Resultados dos Testes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              border: result.status === 'error' ? '1px solid' : 'none',\n              borderColor: 'error.main'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 1\n                },\n                children: [getStatusIcon(result.status), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    ml: 1,\n                    flexGrow: 1\n                  },\n                  children: result.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: result.status === 'success' ? 'Sucesso' : 'Erro',\n                  color: getStatusColor(result.status),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                paragraph: true,\n                children: result.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontFamily: 'monospace'\n                },\n                children: result.result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), result.duration > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  mt: 1,\n                  display: 'block'\n                },\n                children: [\"Tempo: \", result.duration, \"ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mt: 3,\n        bgcolor: 'grey.50'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Instru\\xE7\\xF5es para Teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        component: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Para testar o sistema completo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Certifique-se de que o PostgreSQL est\\xE1 rodando\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Inicie o backend Spring Boot (porta 8080)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Inicie o frontend React (porta 3000)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Execute os testes nesta p\\xE1gina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Acesse \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"/admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 24\n            }, this), \" para testar a interface de administra\\xE7\\xE3o\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Acesse \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 24\n            }, this), \" para testar a interface p\\xFAblica\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"URLs importantes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"http://localhost:3000/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), \" - Interface p\\xFAblica\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"http://localhost:3000/admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), \" - Interface de administra\\xE7\\xE3o\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"http://localhost:3000/test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), \" - Esta p\\xE1gina de teste\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"http://localhost:8080/api\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), \" - API Backend\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(TestPage, \"Ux+w8fF7jdQqqhVurnpVIhpCuGQ=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","Button","Grid","Card","CardContent","CardActions","Chip","Alert","CircularProgress","Divider","PlayArrow","PlayIcon","Stop","StopIcon","Refresh","RefreshIcon","CheckCircle","CheckIcon","Error","ErrorIcon","Info","InfoIcon","categoryService","faqService","jsxDEV","_jsxDEV","TestPage","_s","testResults","setTestResults","isRunning","setIsRunning","currentTest","setCurrentTest","tests","name","description","test","response","fetch","ok","status","getAll","data","length","testCategory","Date","now","displayOrder","active","create","id","search","getActive","runAllTests","startTime","result","duration","prev","error","message","Promise","resolve","setTimeout","clearResults","getStatusIcon","color","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","successCount","filter","r","errorCount","totalTests","maxWidth","sx","mt","mb","children","variant","component","gutterBottom","paragraph","p","display","alignItems","gap","startIcon","size","onClick","disabled","severity","label","container","spacing","map","index","item","xs","md","height","border","borderColor","ml","flexGrow","my","fontFamily","bgcolor","_c","$RefreshReg$"],"sources":["C:/Users/leand/ProjetoFAQ/frontend/src/components/TestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Chip,\n  Alert,\n  CircularProgress,\n  Divider\n} from '@mui/material';\nimport {\n  PlayArrow as PlayIcon,\n  Stop as StopIcon,\n  Refresh as RefreshIcon,\n  CheckCircle as CheckIcon,\n  Error as ErrorIcon,\n  Info as InfoIcon\n} from '@mui/icons-material';\nimport { categoryService, faqService } from '../services/api';\n\nfunction TestPage() {\n  const [testResults, setTestResults] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentTest, setCurrentTest] = useState('');\n\n  const tests = [\n    {\n      name: 'Conexão com Backend',\n      description: 'Testa se o frontend consegue se conectar com o backend',\n      test: async () => {\n        const response = await fetch('http://localhost:8080/api/categories');\n        if (!response.ok) throw new Error(`HTTP ${response.status}`);\n        return 'Conexão estabelecida com sucesso';\n      }\n    },\n    {\n      name: 'Listar Categorias',\n      description: 'Testa o endpoint de listagem de categorias',\n      test: async () => {\n        const response = await categoryService.getAll();\n        return `${response.data.length} categorias encontradas`;\n      }\n    },\n    {\n      name: 'Listar FAQs',\n      description: 'Testa o endpoint de listagem de FAQs',\n      test: async () => {\n        const response = await faqService.getAll();\n        return `${response.data.length} FAQs encontradas`;\n      }\n    },\n    {\n      name: 'Criar Categoria de Teste',\n      description: 'Testa a criação de uma nova categoria',\n      test: async () => {\n        const testCategory = {\n          name: `Categoria Teste ${Date.now()}`,\n          description: 'Categoria criada durante o teste',\n          displayOrder: 999,\n          active: true\n        };\n        const response = await categoryService.create(testCategory);\n        return `Categoria criada com ID: ${response.data.id}`;\n      }\n    },\n    {\n      name: 'Buscar FAQs',\n      description: 'Testa a funcionalidade de busca',\n      test: async () => {\n        const response = await faqService.search('teste');\n        return `Busca retornou ${response.data.length} resultados`;\n      }\n    },\n    {\n      name: 'Categorias Ativas',\n      description: 'Testa o endpoint de categorias ativas',\n      test: async () => {\n        const response = await categoryService.getActive();\n        return `${response.data.length} categorias ativas`;\n      }\n    }\n  ];\n\n  const runAllTests = async () => {\n    setIsRunning(true);\n    setTestResults([]);\n    \n    for (const test of tests) {\n      setCurrentTest(test.name);\n      \n      try {\n        const startTime = Date.now();\n        const result = await test.test();\n        const duration = Date.now() - startTime;\n        \n        setTestResults(prev => [...prev, {\n          name: test.name,\n          description: test.description,\n          status: 'success',\n          result,\n          duration\n        }]);\n      } catch (error) {\n        setTestResults(prev => [...prev, {\n          name: test.name,\n          description: test.description,\n          status: 'error',\n          result: error.message,\n          duration: 0\n        }]);\n      }\n      \n      // Pequena pausa entre os testes\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n    \n    setIsRunning(false);\n    setCurrentTest('');\n  };\n\n  const clearResults = () => {\n    setTestResults([]);\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'success':\n        return <CheckIcon color=\"success\" />;\n      case 'error':\n        return <ErrorIcon color=\"error\" />;\n      default:\n        return <InfoIcon color=\"info\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'success':\n        return 'success';\n      case 'error':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const successCount = testResults.filter(r => r.status === 'success').length;\n  const errorCount = testResults.filter(r => r.status === 'error').length;\n  const totalTests = testResults.length;\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Página de Teste - Sistema FAQ\n      </Typography>\n      \n      <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n        Esta página permite testar a conectividade e funcionalidades básicas do sistema FAQ.\n        Certifique-se de que o backend está rodando na porta 8080.\n      </Typography>\n\n      {/* Control Panel */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n          <Button\n            variant=\"contained\"\n            startIcon={isRunning ? <CircularProgress size={20} color=\"inherit\" /> : <PlayIcon />}\n            onClick={runAllTests}\n            disabled={isRunning}\n          >\n            {isRunning ? 'Executando Testes...' : 'Executar Todos os Testes'}\n          </Button>\n          \n          <Button\n            variant=\"outlined\"\n            startIcon={<RefreshIcon />}\n            onClick={clearResults}\n            disabled={isRunning}\n          >\n            Limpar Resultados\n          </Button>\n        </Box>\n        \n        {isRunning && currentTest && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            Executando: {currentTest}\n          </Alert>\n        )}\n        \n        {totalTests > 0 && (\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <Chip \n              label={`Total: ${totalTests}`} \n              color=\"default\" \n            />\n            <Chip \n              label={`Sucessos: ${successCount}`} \n              color=\"success\" \n            />\n            <Chip \n              label={`Erros: ${errorCount}`} \n              color=\"error\" \n            />\n          </Box>\n        )}\n      </Paper>\n\n      {/* Test Results */}\n      {testResults.length > 0 && (\n        <Box>\n          <Typography variant=\"h5\" gutterBottom>\n            Resultados dos Testes\n          </Typography>\n          \n          <Grid container spacing={2}>\n            {testResults.map((result, index) => (\n              <Grid item xs={12} md={6} key={index}>\n                <Card \n                  sx={{ \n                    height: '100%',\n                    border: result.status === 'error' ? '1px solid' : 'none',\n                    borderColor: 'error.main'\n                  }}\n                >\n                  <CardContent>\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                      {getStatusIcon(result.status)}\n                      <Typography variant=\"h6\" sx={{ ml: 1, flexGrow: 1 }}>\n                        {result.name}\n                      </Typography>\n                      <Chip \n                        label={result.status === 'success' ? 'Sucesso' : 'Erro'}\n                        color={getStatusColor(result.status)}\n                        size=\"small\"\n                      />\n                    </Box>\n                    \n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {result.description}\n                    </Typography>\n                    \n                    <Divider sx={{ my: 1 }} />\n                    \n                    <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>\n                      {result.result}\n                    </Typography>\n                    \n                    {result.duration > 0 && (\n                      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n                        Tempo: {result.duration}ms\n                      </Typography>\n                    )}\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      )}\n\n      {/* Instructions */}\n      <Paper sx={{ p: 3, mt: 3, bgcolor: 'grey.50' }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Instruções para Teste\n        </Typography>\n        \n        <Typography variant=\"body2\" component=\"div\">\n          <strong>Para testar o sistema completo:</strong>\n          <ol>\n            <li>Certifique-se de que o PostgreSQL está rodando</li>\n            <li>Inicie o backend Spring Boot (porta 8080)</li>\n            <li>Inicie o frontend React (porta 3000)</li>\n            <li>Execute os testes nesta página</li>\n            <li>Acesse <code>/admin</code> para testar a interface de administração</li>\n            <li>Acesse <code>/</code> para testar a interface pública</li>\n          </ol>\n          \n          <strong>URLs importantes:</strong>\n          <ul>\n            <li><code>http://localhost:3000/</code> - Interface pública</li>\n            <li><code>http://localhost:3000/admin</code> - Interface de administração</li>\n            <li><code>http://localhost:3000/test</code> - Esta página de teste</li>\n            <li><code>http://localhost:8080/api</code> - API Backend</li>\n          </ul>\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default TestPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}